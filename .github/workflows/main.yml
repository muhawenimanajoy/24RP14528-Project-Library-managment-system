name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_REGISTRY: docker.io
  BACKEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/library-backend
  BOOK_SERVICE_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/book-service

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm ci
          cd frontend && npm ci

      - name: Run Tests
        run: npm test

      - name: Run Security Audit
        run: npm audit

  build-and-push-images:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Backend image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.BACKEND_IMAGE }}:${{ github.sha }}

      - name: Build and push Book Service image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./microservice/Dockerfile
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.BOOK_SERVICE_IMAGE }}:${{ github.sha }}

  deploy:
    needs: build-and-push-images
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Set up kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Update kubernetes manifests
        run: |
          sed -i "s|image:.*|image: ${{ env.DOCKER_REGISTRY }}/${{ env.BACKEND_IMAGE }}:${{ github.sha }}|" k8s/backend-deployment.yaml
          sed -i "s|image:.*|image: ${{ env.DOCKER_REGISTRY }}/${{ env.BOOK_SERVICE_IMAGE }}:${{ github.sha }}|" k8s/microservice-deployment.yaml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/

      - name: Verify deployment
        run: |
          kubectl wait --for=condition=ready pod -l app=library-backend --timeout=300s
          kubectl wait --for=condition=ready pod -l app=book-service --timeout=300s
